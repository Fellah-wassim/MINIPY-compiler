State 33 conflicts: 1 shift/reduce
State 74 conflicts: 5 reduce/reduce
State 100 conflicts: 3 reduce/reduce


Grammar

    0 $accept: Start $end

    1 Start: declarationList ListInst
    2      | newLines declarationList ListInst

    3 declarationList: declaration newLines declarationList
    4                | declaration newLines
    5                | comment newLines declarationList
    6                | newLines comment declarationList
    7                | declaration

    8 newLines: newLine newLines
    9         | newLine

   10 declaration: type IDF ListIDF
   11            | IDF key_word_ASSIGNMENT VALUE
   12            | type case

   13 case: IDF openSquareBracket CST_INT closeSquareBracket

   14 type: key_word_INTEGER
   15     | key_word_FLOAT
   16     | key_word_CHAR
   17     | key_word_BOOL

   18 VALUE: CST_INT
   19      | CST_FLOAT
   20      | CST_CHAR
   21      | CST_BOOL

   22 ListIDF: virgule IDF ListIDF
   23        | virgule IDF
   24        | /* empty */

   25 ListInst: instruction newLine ListInst
   26         | instruction

   27 instruction: inst_ASSIGNMENT
   28            | inst_if
   29            | inst_while
   30            | inst_for

   31 inst_ASSIGNMENT: IDF key_word_ASSIGNMENT operand
   32                | IDF key_word_ASSIGNMENT expression
   33                | case key_word_ASSIGNMENT operand
   34                | case key_word_ASSIGNMENT expression

   35 inst_if: key_word_IF openBracket cond closeBracket colon newLine Bloc key_word_ELSE colon newLine Bloc
   36        | key_word_IF openBracket cond closeBracket colon newLine Bloc

   37 inst_while: key_word_WHILE openBracket cond closeBracket colon newLine Bloc

   38 inst_for: for1
   39         | for2

   40 for1: key_word_FOR IDF InRange colon newLine Bloc

   41 InRange: key_word_RANGE openBracket VALUE virgule VALUE closeBracket

   42 for2: key_word_FOR IDF key_word_IN IDF colon newLine Bloc

   43 Bloc: ind instruction newLine Bloc
   44     | /* empty */

   45 cond: operand logicalOperand operand
   46     | operand comparisionOperand operand
   47     | key_word_NOT operand
   48     | key_word_NOT expressionWithBrackets

   49 expression: operand opr operand
   50           | operand opr expression
   51           | operand opr expressionWithBrackets
   52           | expressionWithBrackets

   53 expressionWithBrackets: openBracket expression closeBracket

   54 opr: opr_ar
   55    | opr_ari

   56 operand: VALUE
   57        | IDF
   58        | case


Terminals, with rules where they appear

$end (0) 0
error (256)
key_word_INTEGER (258) 14
key_word_FLOAT (259) 15
key_word_CHAR (260) 16
key_word_BOOL (261) 17
key_word_IF (262) 35 36
key_word_ELSE (263) 35
key_word_FOR (264) 40 42
key_word_RANGE (265) 41
key_word_IN (266) 42
key_word_WHILE (267) 37
IDF (268) 10 11 13 22 23 31 32 40 42 57
virgule (269) 22 23 41
key_word_ASSIGNMENT (270) 11 31 32 33 34
openSquareBracket (271) 13
closeSquareBracket (272) 13
openBracket (273) 35 36 37 41 53
closeBracket (274) 35 36 37 41 53
colon (275) 35 36 37 40 42
logicalOperand (276) 45
opr_ar (277) 54
opr_ari (278) 55
key_word_NOT (279) 47 48
comparisionOperand (280) 46
ind (281) 43
newLine (282) 8 9 25 35 36 37 40 42 43
CST_INT (283) 13 18
CST_FLOAT (284) 19
CST_CHAR (285) 20
CST_BOOL (286) 21
comment (287) 5 6


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
Start (34)
    on left: 1 2, on right: 0
declarationList (35)
    on left: 3 4 5 6 7, on right: 1 2 3 5 6
newLines (36)
    on left: 8 9, on right: 2 3 4 5 6 8
declaration (37)
    on left: 10 11 12, on right: 3 4 7
case (38)
    on left: 13, on right: 12 33 34 58
type (39)
    on left: 14 15 16 17, on right: 10 12
VALUE (40)
    on left: 18 19 20 21, on right: 11 41 56
ListIDF (41)
    on left: 22 23 24, on right: 10 22
ListInst (42)
    on left: 25 26, on right: 1 2 25
instruction (43)
    on left: 27 28 29 30, on right: 25 26 43
inst_ASSIGNMENT (44)
    on left: 31 32 33 34, on right: 27
inst_if (45)
    on left: 35 36, on right: 28
inst_while (46)
    on left: 37, on right: 29
inst_for (47)
    on left: 38 39, on right: 30
for1 (48)
    on left: 40, on right: 38
InRange (49)
    on left: 41, on right: 40
for2 (50)
    on left: 42, on right: 39
Bloc (51)
    on left: 43 44, on right: 35 36 37 40 42 43
cond (52)
    on left: 45 46 47 48, on right: 35 36 37
expression (53)
    on left: 49 50 51 52, on right: 32 34 50 53
expressionWithBrackets (54)
    on left: 53, on right: 48 51 52
opr (55)
    on left: 54 55, on right: 49 50 51
operand (56)
    on left: 56 57 58, on right: 31 33 45 46 47 49 50 51


state 0

    0 $accept: . Start $end

    key_word_INTEGER  shift, and go to state 1
    key_word_FLOAT    shift, and go to state 2
    key_word_CHAR     shift, and go to state 3
    key_word_BOOL     shift, and go to state 4
    IDF               shift, and go to state 5
    newLine           shift, and go to state 6
    comment           shift, and go to state 7

    Start            go to state 8
    declarationList  go to state 9
    newLines         go to state 10
    declaration      go to state 11
    type             go to state 12


state 1

   14 type: key_word_INTEGER .

    $default  reduce using rule 14 (type)


state 2

   15 type: key_word_FLOAT .

    $default  reduce using rule 15 (type)


state 3

   16 type: key_word_CHAR .

    $default  reduce using rule 16 (type)


state 4

   17 type: key_word_BOOL .

    $default  reduce using rule 17 (type)


state 5

   11 declaration: IDF . key_word_ASSIGNMENT VALUE

    key_word_ASSIGNMENT  shift, and go to state 13


state 6

    8 newLines: newLine . newLines
    9         | newLine .

    newLine  error (nonassociative)

    $default  reduce using rule 9 (newLines)

    newLines  go to state 14


state 7

    5 declarationList: comment . newLines declarationList

    newLine  shift, and go to state 6

    newLines  go to state 15


state 8

    0 $accept: Start . $end

    $end  shift, and go to state 16


state 9

    1 Start: declarationList . ListInst

    key_word_IF     shift, and go to state 17
    key_word_FOR    shift, and go to state 18
    key_word_WHILE  shift, and go to state 19
    IDF             shift, and go to state 20

    case             go to state 21
    ListInst         go to state 22
    instruction      go to state 23
    inst_ASSIGNMENT  go to state 24
    inst_if          go to state 25
    inst_while       go to state 26
    inst_for         go to state 27
    for1             go to state 28
    for2             go to state 29


state 10

    2 Start: newLines . declarationList ListInst
    6 declarationList: newLines . comment declarationList

    key_word_INTEGER  shift, and go to state 1
    key_word_FLOAT    shift, and go to state 2
    key_word_CHAR     shift, and go to state 3
    key_word_BOOL     shift, and go to state 4
    IDF               shift, and go to state 5
    newLine           shift, and go to state 6
    comment           shift, and go to state 30

    declarationList  go to state 31
    newLines         go to state 32
    declaration      go to state 11
    type             go to state 12


state 11

    3 declarationList: declaration . newLines declarationList
    4                | declaration . newLines
    7                | declaration .

    newLine  shift, and go to state 6

    $default  reduce using rule 7 (declarationList)

    newLines  go to state 33


state 12

   10 declaration: type . IDF ListIDF
   12            | type . case

    IDF  shift, and go to state 34

    case  go to state 35


state 13

   11 declaration: IDF key_word_ASSIGNMENT . VALUE

    CST_INT    shift, and go to state 36
    CST_FLOAT  shift, and go to state 37
    CST_CHAR   shift, and go to state 38
    CST_BOOL   shift, and go to state 39

    VALUE  go to state 40


state 14

    8 newLines: newLine newLines .

    $default  reduce using rule 8 (newLines)


state 15

    5 declarationList: comment newLines . declarationList

    key_word_INTEGER  shift, and go to state 1
    key_word_FLOAT    shift, and go to state 2
    key_word_CHAR     shift, and go to state 3
    key_word_BOOL     shift, and go to state 4
    IDF               shift, and go to state 5
    newLine           shift, and go to state 6
    comment           shift, and go to state 7

    declarationList  go to state 41
    newLines         go to state 32
    declaration      go to state 11
    type             go to state 12


state 16

    0 $accept: Start $end .

    $default  accept


state 17

   35 inst_if: key_word_IF . openBracket cond closeBracket colon newLine Bloc key_word_ELSE colon newLine Bloc
   36        | key_word_IF . openBracket cond closeBracket colon newLine Bloc

    openBracket  shift, and go to state 42


state 18

   40 for1: key_word_FOR . IDF InRange colon newLine Bloc
   42 for2: key_word_FOR . IDF key_word_IN IDF colon newLine Bloc

    IDF  shift, and go to state 43


state 19

   37 inst_while: key_word_WHILE . openBracket cond closeBracket colon newLine Bloc

    openBracket  shift, and go to state 44


state 20

   13 case: IDF . openSquareBracket CST_INT closeSquareBracket
   31 inst_ASSIGNMENT: IDF . key_word_ASSIGNMENT operand
   32                | IDF . key_word_ASSIGNMENT expression

    key_word_ASSIGNMENT  shift, and go to state 45
    openSquareBracket    shift, and go to state 46


state 21

   33 inst_ASSIGNMENT: case . key_word_ASSIGNMENT operand
   34                | case . key_word_ASSIGNMENT expression

    key_word_ASSIGNMENT  shift, and go to state 47


state 22

    1 Start: declarationList ListInst .

    $default  reduce using rule 1 (Start)


state 23

   25 ListInst: instruction . newLine ListInst
   26         | instruction .

    newLine  shift, and go to state 48

    $default  reduce using rule 26 (ListInst)


state 24

   27 instruction: inst_ASSIGNMENT .

    $default  reduce using rule 27 (instruction)


state 25

   28 instruction: inst_if .

    $default  reduce using rule 28 (instruction)


state 26

   29 instruction: inst_while .

    $default  reduce using rule 29 (instruction)


state 27

   30 instruction: inst_for .

    $default  reduce using rule 30 (instruction)


state 28

   38 inst_for: for1 .

    $default  reduce using rule 38 (inst_for)


state 29

   39 inst_for: for2 .

    $default  reduce using rule 39 (inst_for)


state 30

    5 declarationList: comment . newLines declarationList
    6                | newLines comment . declarationList

    key_word_INTEGER  shift, and go to state 1
    key_word_FLOAT    shift, and go to state 2
    key_word_CHAR     shift, and go to state 3
    key_word_BOOL     shift, and go to state 4
    IDF               shift, and go to state 5
    newLine           shift, and go to state 6
    comment           shift, and go to state 7

    declarationList  go to state 49
    newLines         go to state 50
    declaration      go to state 11
    type             go to state 12


state 31

    2 Start: newLines declarationList . ListInst

    key_word_IF     shift, and go to state 17
    key_word_FOR    shift, and go to state 18
    key_word_WHILE  shift, and go to state 19
    IDF             shift, and go to state 20

    case             go to state 21
    ListInst         go to state 51
    instruction      go to state 23
    inst_ASSIGNMENT  go to state 24
    inst_if          go to state 25
    inst_while       go to state 26
    inst_for         go to state 27
    for1             go to state 28
    for2             go to state 29


state 32

    6 declarationList: newLines . comment declarationList

    comment  shift, and go to state 52


state 33

    3 declarationList: declaration newLines . declarationList
    4                | declaration newLines .

    key_word_INTEGER  shift, and go to state 1
    key_word_FLOAT    shift, and go to state 2
    key_word_CHAR     shift, and go to state 3
    key_word_BOOL     shift, and go to state 4
    IDF               shift, and go to state 5
    newLine           shift, and go to state 6
    comment           shift, and go to state 7

    IDF       [reduce using rule 4 (declarationList)]
    $default  reduce using rule 4 (declarationList)

    declarationList  go to state 53
    newLines         go to state 32
    declaration      go to state 11
    type             go to state 12


state 34

   10 declaration: type IDF . ListIDF
   13 case: IDF . openSquareBracket CST_INT closeSquareBracket

    virgule            shift, and go to state 54
    openSquareBracket  shift, and go to state 46

    $default  reduce using rule 24 (ListIDF)

    ListIDF  go to state 55


state 35

   12 declaration: type case .

    $default  reduce using rule 12 (declaration)


state 36

   18 VALUE: CST_INT .

    $default  reduce using rule 18 (VALUE)


state 37

   19 VALUE: CST_FLOAT .

    $default  reduce using rule 19 (VALUE)


state 38

   20 VALUE: CST_CHAR .

    $default  reduce using rule 20 (VALUE)


state 39

   21 VALUE: CST_BOOL .

    $default  reduce using rule 21 (VALUE)


state 40

   11 declaration: IDF key_word_ASSIGNMENT VALUE .

    $default  reduce using rule 11 (declaration)


state 41

    5 declarationList: comment newLines declarationList .

    $default  reduce using rule 5 (declarationList)


state 42

   35 inst_if: key_word_IF openBracket . cond closeBracket colon newLine Bloc key_word_ELSE colon newLine Bloc
   36        | key_word_IF openBracket . cond closeBracket colon newLine Bloc

    IDF           shift, and go to state 56
    key_word_NOT  shift, and go to state 57
    CST_INT       shift, and go to state 36
    CST_FLOAT     shift, and go to state 37
    CST_CHAR      shift, and go to state 38
    CST_BOOL      shift, and go to state 39

    case     go to state 58
    VALUE    go to state 59
    cond     go to state 60
    operand  go to state 61


state 43

   40 for1: key_word_FOR IDF . InRange colon newLine Bloc
   42 for2: key_word_FOR IDF . key_word_IN IDF colon newLine Bloc

    key_word_RANGE  shift, and go to state 62
    key_word_IN     shift, and go to state 63

    InRange  go to state 64


state 44

   37 inst_while: key_word_WHILE openBracket . cond closeBracket colon newLine Bloc

    IDF           shift, and go to state 56
    key_word_NOT  shift, and go to state 57
    CST_INT       shift, and go to state 36
    CST_FLOAT     shift, and go to state 37
    CST_CHAR      shift, and go to state 38
    CST_BOOL      shift, and go to state 39

    case     go to state 58
    VALUE    go to state 59
    cond     go to state 65
    operand  go to state 61


state 45

   31 inst_ASSIGNMENT: IDF key_word_ASSIGNMENT . operand
   32                | IDF key_word_ASSIGNMENT . expression

    IDF          shift, and go to state 56
    openBracket  shift, and go to state 66
    CST_INT      shift, and go to state 36
    CST_FLOAT    shift, and go to state 37
    CST_CHAR     shift, and go to state 38
    CST_BOOL     shift, and go to state 39

    case                    go to state 58
    VALUE                   go to state 59
    expression              go to state 67
    expressionWithBrackets  go to state 68
    operand                 go to state 69


state 46

   13 case: IDF openSquareBracket . CST_INT closeSquareBracket

    CST_INT  shift, and go to state 70


state 47

   33 inst_ASSIGNMENT: case key_word_ASSIGNMENT . operand
   34                | case key_word_ASSIGNMENT . expression

    IDF          shift, and go to state 56
    openBracket  shift, and go to state 66
    CST_INT      shift, and go to state 36
    CST_FLOAT    shift, and go to state 37
    CST_CHAR     shift, and go to state 38
    CST_BOOL     shift, and go to state 39

    case                    go to state 58
    VALUE                   go to state 59
    expression              go to state 71
    expressionWithBrackets  go to state 68
    operand                 go to state 72


state 48

   25 ListInst: instruction newLine . ListInst

    key_word_IF     shift, and go to state 17
    key_word_FOR    shift, and go to state 18
    key_word_WHILE  shift, and go to state 19
    IDF             shift, and go to state 20

    case             go to state 21
    ListInst         go to state 73
    instruction      go to state 23
    inst_ASSIGNMENT  go to state 24
    inst_if          go to state 25
    inst_while       go to state 26
    inst_for         go to state 27
    for1             go to state 28
    for2             go to state 29


state 49

    6 declarationList: newLines comment declarationList .

    $default  reduce using rule 6 (declarationList)


state 50

    5 declarationList: comment newLines . declarationList
    6                | newLines . comment declarationList

    key_word_INTEGER  shift, and go to state 1
    key_word_FLOAT    shift, and go to state 2
    key_word_CHAR     shift, and go to state 3
    key_word_BOOL     shift, and go to state 4
    IDF               shift, and go to state 5
    newLine           shift, and go to state 6
    comment           shift, and go to state 30

    declarationList  go to state 41
    newLines         go to state 32
    declaration      go to state 11
    type             go to state 12


state 51

    2 Start: newLines declarationList ListInst .

    $default  reduce using rule 2 (Start)


state 52

    6 declarationList: newLines comment . declarationList

    key_word_INTEGER  shift, and go to state 1
    key_word_FLOAT    shift, and go to state 2
    key_word_CHAR     shift, and go to state 3
    key_word_BOOL     shift, and go to state 4
    IDF               shift, and go to state 5
    newLine           shift, and go to state 6
    comment           shift, and go to state 7

    declarationList  go to state 49
    newLines         go to state 32
    declaration      go to state 11
    type             go to state 12


state 53

    3 declarationList: declaration newLines declarationList .

    $default  reduce using rule 3 (declarationList)


state 54

   22 ListIDF: virgule . IDF ListIDF
   23        | virgule . IDF

    IDF  shift, and go to state 74


state 55

   10 declaration: type IDF ListIDF .

    $default  reduce using rule 10 (declaration)


state 56

   13 case: IDF . openSquareBracket CST_INT closeSquareBracket
   57 operand: IDF .

    openSquareBracket  shift, and go to state 46

    $default  reduce using rule 57 (operand)


state 57

   47 cond: key_word_NOT . operand
   48     | key_word_NOT . expressionWithBrackets

    IDF          shift, and go to state 56
    openBracket  shift, and go to state 66
    CST_INT      shift, and go to state 36
    CST_FLOAT    shift, and go to state 37
    CST_CHAR     shift, and go to state 38
    CST_BOOL     shift, and go to state 39

    case                    go to state 58
    VALUE                   go to state 59
    expressionWithBrackets  go to state 75
    operand                 go to state 76


state 58

   58 operand: case .

    $default  reduce using rule 58 (operand)


state 59

   56 operand: VALUE .

    $default  reduce using rule 56 (operand)


state 60

   35 inst_if: key_word_IF openBracket cond . closeBracket colon newLine Bloc key_word_ELSE colon newLine Bloc
   36        | key_word_IF openBracket cond . closeBracket colon newLine Bloc

    closeBracket  shift, and go to state 77


state 61

   45 cond: operand . logicalOperand operand
   46     | operand . comparisionOperand operand

    logicalOperand      shift, and go to state 78
    comparisionOperand  shift, and go to state 79


state 62

   41 InRange: key_word_RANGE . openBracket VALUE virgule VALUE closeBracket

    openBracket  shift, and go to state 80


state 63

   42 for2: key_word_FOR IDF key_word_IN . IDF colon newLine Bloc

    IDF  shift, and go to state 81


state 64

   40 for1: key_word_FOR IDF InRange . colon newLine Bloc

    colon  shift, and go to state 82


state 65

   37 inst_while: key_word_WHILE openBracket cond . closeBracket colon newLine Bloc

    closeBracket  shift, and go to state 83


state 66

   53 expressionWithBrackets: openBracket . expression closeBracket

    IDF          shift, and go to state 56
    openBracket  shift, and go to state 66
    CST_INT      shift, and go to state 36
    CST_FLOAT    shift, and go to state 37
    CST_CHAR     shift, and go to state 38
    CST_BOOL     shift, and go to state 39

    case                    go to state 58
    VALUE                   go to state 59
    expression              go to state 84
    expressionWithBrackets  go to state 68
    operand                 go to state 85


state 67

   32 inst_ASSIGNMENT: IDF key_word_ASSIGNMENT expression .

    $default  reduce using rule 32 (inst_ASSIGNMENT)


state 68

   52 expression: expressionWithBrackets .

    $default  reduce using rule 52 (expression)


state 69

   31 inst_ASSIGNMENT: IDF key_word_ASSIGNMENT operand .
   49 expression: operand . opr operand
   50           | operand . opr expression
   51           | operand . opr expressionWithBrackets

    opr_ar   shift, and go to state 86
    opr_ari  shift, and go to state 87

    $default  reduce using rule 31 (inst_ASSIGNMENT)

    opr  go to state 88


state 70

   13 case: IDF openSquareBracket CST_INT . closeSquareBracket

    closeSquareBracket  shift, and go to state 89


state 71

   34 inst_ASSIGNMENT: case key_word_ASSIGNMENT expression .

    $default  reduce using rule 34 (inst_ASSIGNMENT)


state 72

   33 inst_ASSIGNMENT: case key_word_ASSIGNMENT operand .
   49 expression: operand . opr operand
   50           | operand . opr expression
   51           | operand . opr expressionWithBrackets

    opr_ar   shift, and go to state 86
    opr_ari  shift, and go to state 87

    $default  reduce using rule 33 (inst_ASSIGNMENT)

    opr  go to state 88


state 73

   25 ListInst: instruction newLine ListInst .

    $default  reduce using rule 25 (ListInst)


state 74

   22 ListIDF: virgule IDF . ListIDF
   23        | virgule IDF .

    virgule  shift, and go to state 54

    key_word_IF     reduce using rule 23 (ListIDF)
    key_word_IF     [reduce using rule 24 (ListIDF)]
    key_word_FOR    reduce using rule 23 (ListIDF)
    key_word_FOR    [reduce using rule 24 (ListIDF)]
    key_word_WHILE  reduce using rule 23 (ListIDF)
    key_word_WHILE  [reduce using rule 24 (ListIDF)]
    IDF             reduce using rule 23 (ListIDF)
    IDF             [reduce using rule 24 (ListIDF)]
    newLine         reduce using rule 23 (ListIDF)
    newLine         [reduce using rule 24 (ListIDF)]
    $default        reduce using rule 23 (ListIDF)

    ListIDF  go to state 90


state 75

   48 cond: key_word_NOT expressionWithBrackets .

    $default  reduce using rule 48 (cond)


state 76

   47 cond: key_word_NOT operand .

    $default  reduce using rule 47 (cond)


state 77

   35 inst_if: key_word_IF openBracket cond closeBracket . colon newLine Bloc key_word_ELSE colon newLine Bloc
   36        | key_word_IF openBracket cond closeBracket . colon newLine Bloc

    colon  shift, and go to state 91


state 78

   45 cond: operand logicalOperand . operand

    IDF        shift, and go to state 56
    CST_INT    shift, and go to state 36
    CST_FLOAT  shift, and go to state 37
    CST_CHAR   shift, and go to state 38
    CST_BOOL   shift, and go to state 39

    case     go to state 58
    VALUE    go to state 59
    operand  go to state 92


state 79

   46 cond: operand comparisionOperand . operand

    IDF        shift, and go to state 56
    CST_INT    shift, and go to state 36
    CST_FLOAT  shift, and go to state 37
    CST_CHAR   shift, and go to state 38
    CST_BOOL   shift, and go to state 39

    case     go to state 58
    VALUE    go to state 59
    operand  go to state 93


state 80

   41 InRange: key_word_RANGE openBracket . VALUE virgule VALUE closeBracket

    CST_INT    shift, and go to state 36
    CST_FLOAT  shift, and go to state 37
    CST_CHAR   shift, and go to state 38
    CST_BOOL   shift, and go to state 39

    VALUE  go to state 94


state 81

   42 for2: key_word_FOR IDF key_word_IN IDF . colon newLine Bloc

    colon  shift, and go to state 95


state 82

   40 for1: key_word_FOR IDF InRange colon . newLine Bloc

    newLine  shift, and go to state 96


state 83

   37 inst_while: key_word_WHILE openBracket cond closeBracket . colon newLine Bloc

    colon  shift, and go to state 97


state 84

   53 expressionWithBrackets: openBracket expression . closeBracket

    closeBracket  shift, and go to state 98


state 85

   49 expression: operand . opr operand
   50           | operand . opr expression
   51           | operand . opr expressionWithBrackets

    opr_ar   shift, and go to state 86
    opr_ari  shift, and go to state 87

    opr  go to state 88


state 86

   54 opr: opr_ar .

    $default  reduce using rule 54 (opr)


state 87

   55 opr: opr_ari .

    $default  reduce using rule 55 (opr)


state 88

   49 expression: operand opr . operand
   50           | operand opr . expression
   51           | operand opr . expressionWithBrackets

    IDF          shift, and go to state 56
    openBracket  shift, and go to state 66
    CST_INT      shift, and go to state 36
    CST_FLOAT    shift, and go to state 37
    CST_CHAR     shift, and go to state 38
    CST_BOOL     shift, and go to state 39

    case                    go to state 58
    VALUE                   go to state 59
    expression              go to state 99
    expressionWithBrackets  go to state 100
    operand                 go to state 101


state 89

   13 case: IDF openSquareBracket CST_INT closeSquareBracket .

    $default  reduce using rule 13 (case)


state 90

   22 ListIDF: virgule IDF ListIDF .

    $default  reduce using rule 22 (ListIDF)


state 91

   35 inst_if: key_word_IF openBracket cond closeBracket colon . newLine Bloc key_word_ELSE colon newLine Bloc
   36        | key_word_IF openBracket cond closeBracket colon . newLine Bloc

    newLine  shift, and go to state 102


state 92

   45 cond: operand logicalOperand operand .

    $default  reduce using rule 45 (cond)


state 93

   46 cond: operand comparisionOperand operand .

    $default  reduce using rule 46 (cond)


state 94

   41 InRange: key_word_RANGE openBracket VALUE . virgule VALUE closeBracket

    virgule  shift, and go to state 103


state 95

   42 for2: key_word_FOR IDF key_word_IN IDF colon . newLine Bloc

    newLine  shift, and go to state 104


state 96

   40 for1: key_word_FOR IDF InRange colon newLine . Bloc

    ind  shift, and go to state 105

    $default  reduce using rule 44 (Bloc)

    Bloc  go to state 106


state 97

   37 inst_while: key_word_WHILE openBracket cond closeBracket colon . newLine Bloc

    newLine  shift, and go to state 107


state 98

   53 expressionWithBrackets: openBracket expression closeBracket .

    $default  reduce using rule 53 (expressionWithBrackets)


state 99

   50 expression: operand opr expression .

    $default  reduce using rule 50 (expression)


state 100

   51 expression: operand opr expressionWithBrackets .
   52           | expressionWithBrackets .

    $end          reduce using rule 51 (expression)
    $end          [reduce using rule 52 (expression)]
    closeBracket  reduce using rule 51 (expression)
    closeBracket  [reduce using rule 52 (expression)]
    newLine       reduce using rule 51 (expression)
    newLine       [reduce using rule 52 (expression)]
    $default      reduce using rule 51 (expression)


state 101

   49 expression: operand . opr operand
   49           | operand opr operand .
   50           | operand . opr expression
   51           | operand . opr expressionWithBrackets

    opr_ar   shift, and go to state 86
    opr_ari  shift, and go to state 87

    $default  reduce using rule 49 (expression)

    opr  go to state 88


state 102

   35 inst_if: key_word_IF openBracket cond closeBracket colon newLine . Bloc key_word_ELSE colon newLine Bloc
   36        | key_word_IF openBracket cond closeBracket colon newLine . Bloc

    ind  shift, and go to state 105

    $default  reduce using rule 44 (Bloc)

    Bloc  go to state 108


state 103

   41 InRange: key_word_RANGE openBracket VALUE virgule . VALUE closeBracket

    CST_INT    shift, and go to state 36
    CST_FLOAT  shift, and go to state 37
    CST_CHAR   shift, and go to state 38
    CST_BOOL   shift, and go to state 39

    VALUE  go to state 109


state 104

   42 for2: key_word_FOR IDF key_word_IN IDF colon newLine . Bloc

    ind  shift, and go to state 105

    $default  reduce using rule 44 (Bloc)

    Bloc  go to state 110


state 105

   43 Bloc: ind . instruction newLine Bloc

    key_word_IF     shift, and go to state 17
    key_word_FOR    shift, and go to state 18
    key_word_WHILE  shift, and go to state 19
    IDF             shift, and go to state 20

    case             go to state 21
    instruction      go to state 111
    inst_ASSIGNMENT  go to state 24
    inst_if          go to state 25
    inst_while       go to state 26
    inst_for         go to state 27
    for1             go to state 28
    for2             go to state 29


state 106

   40 for1: key_word_FOR IDF InRange colon newLine Bloc .

    $default  reduce using rule 40 (for1)


state 107

   37 inst_while: key_word_WHILE openBracket cond closeBracket colon newLine . Bloc

    ind  shift, and go to state 105

    $default  reduce using rule 44 (Bloc)

    Bloc  go to state 112


state 108

   35 inst_if: key_word_IF openBracket cond closeBracket colon newLine Bloc . key_word_ELSE colon newLine Bloc
   36        | key_word_IF openBracket cond closeBracket colon newLine Bloc .

    key_word_ELSE  shift, and go to state 113

    $default  reduce using rule 36 (inst_if)


state 109

   41 InRange: key_word_RANGE openBracket VALUE virgule VALUE . closeBracket

    closeBracket  shift, and go to state 114


state 110

   42 for2: key_word_FOR IDF key_word_IN IDF colon newLine Bloc .

    $default  reduce using rule 42 (for2)


state 111

   43 Bloc: ind instruction . newLine Bloc

    newLine  shift, and go to state 115


state 112

   37 inst_while: key_word_WHILE openBracket cond closeBracket colon newLine Bloc .

    $default  reduce using rule 37 (inst_while)


state 113

   35 inst_if: key_word_IF openBracket cond closeBracket colon newLine Bloc key_word_ELSE . colon newLine Bloc

    colon  shift, and go to state 116


state 114

   41 InRange: key_word_RANGE openBracket VALUE virgule VALUE closeBracket .

    $default  reduce using rule 41 (InRange)


state 115

   43 Bloc: ind instruction newLine . Bloc

    ind  shift, and go to state 105

    $default  reduce using rule 44 (Bloc)

    Bloc  go to state 117


state 116

   35 inst_if: key_word_IF openBracket cond closeBracket colon newLine Bloc key_word_ELSE colon . newLine Bloc

    newLine  shift, and go to state 118


state 117

   43 Bloc: ind instruction newLine Bloc .

    $default  reduce using rule 43 (Bloc)


state 118

   35 inst_if: key_word_IF openBracket cond closeBracket colon newLine Bloc key_word_ELSE colon newLine . Bloc

    ind  shift, and go to state 105

    $default  reduce using rule 44 (Bloc)

    Bloc  go to state 119


state 119

   35 inst_if: key_word_IF openBracket cond closeBracket colon newLine Bloc key_word_ELSE colon newLine Bloc .

    $default  reduce using rule 35 (inst_if)
